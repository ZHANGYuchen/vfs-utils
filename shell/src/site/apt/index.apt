 -----
 VFS Shell
 -----
 kleij - at - users.sourceforge.net
 -----

VFS Shell

 This project provides a Java Shell interface (or Java Command Line) .
 
 The shell interface is inspired on the Shell example that comes with the Apache Commons VFS library but it is more extensible and adds more functionality.
 
 It is easy to add commands or to change the behaviour of the existing commands.
 
 The command style is *nix like.

 The available commands are:
 
 * cd, pushd, popd, peekd, dirs: directory manipulation
 
 * ls: directory content listing
 
 * cp, mv, mkdir, rmdir, rm: basic file manipulations
 
 * load: executes a file containing shell instructions
 
 * cat: dumps the content of a file
 
 * attr:  meta data (attribute) manipulation (get, set, info)
 
 * ops: operation interaction (list, do, usage)
 
 * error: details of last occurred error
 
 * set: sets variables
 
 * bsh: executes a line of beanshell script 
 
 * open: opens a filesystem and asks for username / password
 
 * close: closes a filesystem
 
 * help: displays the list of commands
 
 []
 
 See the {{{commands.html} list of available commands}} for more details.
 
 Clearly this list can be extended with all kind of other commands. 
 
 Whitespace can be escaped using a backslash, e.g. cd Program\\ Files.
 
 To exit the shell you can use exit, quit or bye.
 
 The variables are resolved before tokenizing and interpretation of the line which means you can also create a variable for commands and create macro-like structures.
 
 The beanshell interpreter has access to all variables but can not change them. Note that the beanshell interpreter accesses them without the $ sign.
 
 Example code:
 
+-----+
 cd /Program\ Files
 pushd file:///c:/temp
 
 open vfsshell-dev.zip
 cp vfshshell-dev file://C:/Program\ Files
 popd
 cd vfsshell-dev
 
 set myvar file:///c:/temp
 bsh print(myvar);
 
 cd $myvar

 load myscript.vfs
+-----+

 You can load files containing commands as a scripting facility. The scripts are interpreted within the current context unless you specify the -c flag for the load command. Interesting for script files is the use of # for comments. You can also use the rem command for comments in the script. 
 
TTD
 
 * Support for wildcards in cp, mv and other operations
 
 * Check integration with JLine
 
 * Piping of output to files
 
 * A java command to run any Java application
 
 []